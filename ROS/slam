1. Windows Terminal 실행.
	- (gazebo에서 제공하는 turtlebot3 예제 중 world_map 사용)
	- world_map : turtlebot3 패키지를 설치하면 자동으로 설치됨.

2. gazebo 런칭
	- 환경설정.. source.  .bash. 환경변수 선언
	- source ~/catkin_ws/devel/setup.bash
	- export TURTLEBOT3_MODEL=waffle_pi
	- roslaunch turtlebot3_gazebo turtlebot3_world.launch

3. Rvis 실행(slam 엔진 동시 실행)
	- 새 터미널 테이블을 열고 동일하게 환경 세팅
		.. roslaunch의 turtlebot slam 같이 실행
		.. slam_methods은 gmapping으로 입력
	- source ~/catkin_ws/devel/setup.bash
	- export TURTLEBOT3_MODEL=waffle_pi
	- roslaunch turtlebot3_slam turtlebot3_slam.launch slam_methods:=gmapping

4. teleop 키노드 실행
	- 새 테이블을 열고 환경변수를 설정한 다음 teleop 키 실행
        - key w/a/s/d/x
	- source ~/catkin_ws/devel/setup.bash
	- export TURTLEBOT3_MODEL=waffle_pi
	- roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch

5. 맵 작성 및 저장
	- 화면 구성 : gazebo, Rviz, 터미널까지 다보이도록 재구성
	- teleop 키 입력으로 로봇을 움직이면서 맵 생성
	- turtlebot을 움직여 맵 생성.

	- 터미널을 이용하여 맵 저장.
	- source ~/catkin_ws/devel/setup.bash
	- export TURTLEBOT3_MODEL=waffle_pi
	- rosrun map_server map_saver -f ~/worldmap

      모든 터미널을 꺼라

6. gazebo와 Rviz 재실행 
	- Rviz 는 경로 생성 및 경로 추정 가능하도록 실행 
        - roscore는 안켜도 된다.
	- source ~/catkin_ws/devel/setup.bash
	- export TURTLEBOT3_MODEL=waffle_pi
	- roslaunch turtlebot3_gazebo turtlebot3_world.launch

7. 저장 맵 열기
	- 현재 아이디에서 HOME 디렉터리 지정하고 worldmap.yaml 실행
	- source ~/catkin_ws/devel/setup.bash
	- export TURTLEBOT3_MODEL=waffle_pi
	- roslaunch turtlebot3_navigation turtlebot3_navigation.launch map_file:=$HOME/worldmap.yaml

8. 로봇의 위치와 읽어들인 맵에서의 실제 로봇 위치 매칭
	- 2D Pose Estomate
		..Estimate 해주는 위치
		-> 이후 경로 계획에서 정밀한 경로 생성과 경로 추종 가능

9. teleop 키를 실행하여 로봇 조정
	- 새 탭을 열고 실행 환경 세팅
	- source ~/catkin_ws/devel/setup.bash
	- export TURTLEBOT3_MODEL=waffle_pi
	- roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch
	- ctrl+c 키 눌러서 teleop 키 종료
		.. teleop 키 종료한 이유는 경로 추정시에 이동체의 이동 속도 및 방향 회전에
		  있어서  teleop 키로 인해서 혼선이 발생할 수 있기 때문.

10. 목적지 지정
	- 2D Nav Goal 을 실행하여 목적지와 목적지에서의 헤딩 각도 지정

11. 필터실습 
    bayes filter(calman, particle) 
    graph pose  optimaizer
    bayes filter
    deepVo(CNN &RNN)
    loop closure
    bundle adjustment

12. orb_slam3 // 카메라하나갖고 찾는것
yml 
슬램중 카메라로 하는건 비전슬램
영상 : real-time single camera
dataset : kitti 
